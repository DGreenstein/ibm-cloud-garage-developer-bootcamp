---
stages:
  - name: dev1
    inputs:
      - type: git
        branch: dev1
        service: ${SOURCE_CONTROL_SERVICE}
    triggers:
      - type: commit
    jobs:
      - name: distribution
        type: builder
        artifact_dir: build
        enable_tests: true
        test_file_pattern: '*.xml, generated/*.xml'
        build_type: npm
        script: |-
          #!/bin/bash

          printenv
          git config --global user.email "wgpannel@us.ibm.com"
          git config --global user.name "wil.pannell"

          git branch integration
          git fetch origin integration
          git merge integration --ff-only

          export PATH=/opt/IBM/node-v6.7.0/bin:./node_modules/.bin:$PATH
          npm install

          mkdir -p generated

          npm run ci
          npm run dist

          scripts/package.sh

          git log -1 --pretty > changelog.txt

          git checkout integration
          git pull origin integration
          git merge dev1 --no-ff --log
          git push origin integration

          git checkout distribution
          git pull origin distribution

          cp -rf build/* .

          git add .
          git commit -m "$(cat ./changelog.txt)"

          git push origin distribution

          git checkout dev1
          tar -czf node_modules.tar.gz node_modules
          rm -rf node_modules

          rm -rf build
          mkdir -p build
          mv . build
      - name: sauce labs
        type: tester
        extension_id: ibm.devops.services.pipeline.saucelabs
        services:
          - ${SAUCE_LABS}
        SELECT_CMD: custom
        COMMAND: |-
          #!/bin/bash
          ls -al
          #export PATH=/opt/IBM/node-v6.7.0/bin:./node_modules/.bin:$PATH
          #tar -xzf node_modules.tar.gz
          #npm run test:sauce
  - name: package
    inputs:
      - type: git
        branch: distribution
        service: ${SOURCE_CONTROL_SERVICE}
    triggers:
      - type: commit
    jobs:
      - name: package
        type: builder
        build_type: simple
  - name: blue-green
    inputs:
      - type: job
        stage: package
        job: package
    triggers:
      - type: stage
    properties:
      - name: APP_NAME
        value: '${CF_APP}'
        type: text
    jobs:
      - name: 'blue-green'
        type: deployer
        target:
          region_id: ${REGION}
          organization: ${ORGANIZATION}
          space: ${SPACE}
          application: ${APPLICATION}
        script: |-
          #!/bin/bash
          cf add-plugin-repo CF-Community http://plugins.cloudfoundry.org
          cf install-plugin blue-green-deploy -r CF-Community <<< y
          cf bgd "${CF_APP}"-dev -f ./manifest.yml

          cf create-route "${CF_SPACE}" mybluemix.net -n "${CF_APP}"-dev
          cf map-route "${CF_APP}"-dev mybluemix.net -n "${CF_APP}"-dev
